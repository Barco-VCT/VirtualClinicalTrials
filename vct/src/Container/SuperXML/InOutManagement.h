//////////////////////////////////////////////////////////////////
//                Simulation                                    //
//                VCT: Virtual Clinical Trials                  //
//////////////////////////////////////////////////////////////////

/*!
 * \file InOutManagement.h
 * \brief Implementation of the class InOutManagement
 * (C) Copyright 2014 Barco NV and others.
 *
 * This software code is licensed to you under the Barco VCT Research License. The text of this license
 * is found in the file License.TXT which is available in the same repository, in absence of which you need
 * to contact Barco first before you are allowed to engage in any act of familiarization or use of whatever
 * kind. Any familiarization or use of whatever kind of this software implies acceptance of the pre-mentioned
 * license. You warrant that the modifications you make are “original” and are able to be subject to the provisions
 * of the pre-mentioned license. Any contribution containing “non-original” modification require the prior written
 * approval from Barco.
 *
 */

#ifndef INOUTMANAGEMENT_H
#define INOUTMANAGEMENT_H

#include <iostream>
#include <string>
#include <map>

/*!
 * \class InOutManagement
 * \brief Class managing the paths of output files of simulations used as input of another simulation.
 *		  Example of the shape of these parameters: [output: 1] -> for the program, means: "the file which is generated here is the number one, and will be used as input later"
 *		  [input: 1] -> means "the file generated as output called 1 must be reused here"
 *		  [outputfolder: 1] -> in this case the path will not point to a file but to a folder
 *		  all these files are managed by the program as <em>temporary files</em> meaning that at the end of the simulations, when this object is destructed, the created folder and the files it contains are \e definitively removed
 */

class InOutManagement {
public:
	/*!
	 * Constructor
	 * Generate a sub folder where the program is executed called "pgmGenerated", which will be deleted at the end of the program
	 */
	InOutManagement();

	/*!
	 * \fn manage
	 * \brief creates/returns a path for a temporari file generated by the simulation. Extension of these temporary files: .temp
	 * \param value: Value to add a new path of file (x: number): [output:x]; to add a new path of a folder: [outputfolder:x]; to get a path: [input: x]. For the output / outputfolder: x must always be different. Otherwise it will return ""
	 * \return string: created/returned path. "" if a problem occured
	*/
	std::string manage (std::string value);

	/*!
	 * Destructor
	 * Remove the temporary folder created, and ALL ITS CONTENT
	 */
	~InOutManagement();

	/*!
	 * \fn check
	 * \brief Check if a string passed as input parameter matches with the pattern describes in the method
	 * \param val value to check
	 * \return true if the pattern matches; false otherwise
	 */
	static bool check (std::string val);
	
private:
	std::map<int, std::string> _paths;	//!< Map containing the different paths of the temporary files <number of the file, path to the file>
	int _current; //!< Number of the current processed path

	
};

#endif
